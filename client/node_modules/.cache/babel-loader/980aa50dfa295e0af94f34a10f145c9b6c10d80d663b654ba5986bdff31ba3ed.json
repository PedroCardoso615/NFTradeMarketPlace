{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pedro\\\\Desktop\\\\NFTradeMarketPlace\\\\client\\\\src\\\\pages\\\\NFTs\\\\TrendingNFTs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Typography, CircularProgress, Card, CardMedia, CardContent, Button, IconButton, Dialog, DialogActions, DialogContent, DialogTitle, Divider } from \"@mui/material\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\";\nimport NFToken from \"../../images/NFToken.png\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrendingNFTs = () => {\n  _s();\n  const [nfts, setNfts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error] = useState(null);\n  const [likedNfts, setLikedNfts] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedNft, setSelectedNft] = useState(null);\n  useEffect(() => {\n    const fetchTrendingNFTs = async () => {\n      try {\n        const res = await fetch(\"process.env.REACT_APP_BACKEND_BASEURL/trending-nfts\");\n        if (!res.ok) {\n          throw new Error(\"Failed to fetch trending NFTs\");\n        }\n        const data = await res.json();\n        setNfts(data);\n      } catch (error) {\n        console.error(\"Error fetching the NFTs:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTrendingNFTs();\n  }, []);\n  useEffect(() => {\n    const fetchFavorites = async () => {\n      try {\n        const res = await fetch(\"process.env.REACT_APP_BACKEND_BASEURL/user/favorites\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          credentials: \"include\"\n        });\n        const data = await res.json();\n        if (data.success) {\n          setLikedNfts(data.favorites.map(fav => fav._id));\n        }\n      } catch (error) {\n        console.error(\"Error fetching favorites:\", error);\n      }\n    };\n    fetchFavorites();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(CircularProgress, {\n    sx: {\n      mt: 3\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Typography, {\n    color: \"error\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 21\n  }, this);\n  const handleLike = async nftId => {\n    try {\n      let res;\n      if (likedNfts.includes(nftId)) {\n        res = await fetch(`process.env.REACT_APP_BACKEND_BASEURL/nft/favorite/${nftId}`, {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          credentials: \"include\"\n        });\n      } else {\n        res = await fetch(`process.env.REACT_APP_BACKEND_BASEURL/nft/favorite/${nftId}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          credentials: \"include\"\n        });\n      }\n      const data = await res.json();\n      if (data.success) {\n        if (likedNfts.includes(nftId)) {\n          setLikedNfts(prev => prev.filter(id => id !== nftId));\n          toast.success(\"NFT removed from favorites!\");\n        } else {\n          setLikedNfts(prev => [...prev, nftId]);\n          toast.success(\"NFT added to favorites!\");\n        }\n      } else {\n        toast.error(data.message);\n      }\n    } catch (error) {\n      console.error(\"Error toggling like on NFT:\", error);\n      toast.error(\"Error updating favorite status.\");\n    }\n  };\n  const handleBuyClick = nft => {\n    setSelectedNft(nft);\n    setOpenDialog(true);\n  };\n  const handleCancel = () => {\n    setOpenDialog(false);\n    setSelectedNft(null);\n  };\n  const handleBuy = async () => {\n    try {\n      const res = await fetch(`process.env.REACT_APP_BACKEND_BASEURL/nft/buy/${selectedNft._id}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n      });\n      const data = await res.json();\n      if (data.success) {\n        toast.success(\"NFT purchased successfully!\");\n        setNfts(prev => prev.map(nft => nft._id === selectedNft._id ? {\n          ...nft,\n          owner: {\n            fullname: \"You\"\n          }\n        } : nft));\n        setNfts(prev => prev.filter(nft => nft._id !== selectedNft._id));\n      } else {\n        toast.error(data.message);\n      }\n    } catch (error) {\n      console.error(\"Error buying NFT:\", error);\n      toast.error(\"Error purchasing NFT.\");\n    } finally {\n      setOpenDialog(false);\n      setSelectedNft(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Trending NFTs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), nfts.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        mt: 3\n      },\n      children: \"No NFTs found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n        gap: 3,\n        mt: 3\n      },\n      children: nfts.map((nft, index) => {\n        var _nft$owner, _nft$creator;\n        return /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            position: \"relative\",\n            borderRadius: \"12px\",\n            transition: \"transform 0.3s ease, box-shadow 0.3s ease\",\n            \"&:hover\": {\n              transform: \"scale(1.05)\",\n              boxShadow: \"0px 4px 20px rgba(0,0,0,0.2)\"\n            },\n            background: index === 0 ? \"linear-gradient(135deg, #FFC107 30%,rgb(240, 209, 33) 60%, #FFF5CC 100%)\" : index === 1 ? \"linear-gradient(135deg,rgb(95, 103, 112) 30%, #C0C0C0 60%, #E8E8E8 100%)\" : index === 2 ? \"linear-gradient(135deg,rgb(179, 90, 2) 30%, #B87333 60%, #E3A869 100%)\" : \"none\",\n            padding: \"4px\",\n            \"&::before\": index < 3 ? {\n              content: '\"\"',\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n              right: 0,\n              bottom: 0,\n              zIndex: -1,\n              borderRadius: \"inherit\",\n              background: index === 0 ? \"linear-gradient(135deg, #FFC107 30%,rgb(233, 200, 13) 60%, #FFF5CC 100%)\" : index === 1 ? \"linear-gradient(135deg,rgb(114, 124, 138) 30%, #C0C0C0 60%, #E8E8E8 100%)\" : index === 2 ? \"linear-gradient(135deg, #CD7F32 30%, #B87333 60%, #E3A869 100%)\" : \"none\"\n            } : {}\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            height: \"300\",\n            image: nft.image,\n            alt: nft.NFTName,\n            sx: {\n              borderRadius: \"12px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                fontWeight: \"bold\"\n              },\n              children: [index + 1, \"\\xBA - \", nft.NFTName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: nft.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              fontWeight: \"bold\",\n              sx: {\n                display: \"flex\",\n                alignItems: \"center\"\n              },\n              children: [nft.price, /*#__PURE__*/_jsxDEV(\"img\", {\n                src: NFToken,\n                alt: \"NFToken\",\n                style: {\n                  width: 35,\n                  height: 35\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Owner: \", (_nft$owner = nft.owner) === null || _nft$owner === void 0 ? void 0 : _nft$owner.fullname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mt: 1\n              },\n              children: [\"Creator: \", (_nft$creator = nft.creator) === null || _nft$creator === void 0 ? void 0 : _nft$creator.fullname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mt: 1\n              },\n              children: [\"Royalty: \", nft.royalty, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2,\n                display: \"flex\",\n                justifyContent: \"space-between\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleLike(nft._id),\n                sx: {\n                  color: likedNfts.includes(nft._id) ? \"red\" : \"gray\"\n                },\n                children: likedNfts.includes(nft._id) ? /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleBuyClick(nft),\n                variant: \"outlined\",\n                color: \"\",\n                startIcon: /*#__PURE__*/_jsxDEV(ShoppingCartIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 32\n                }, this),\n                children: \"Buy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, nft._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCancel,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Buy NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedNft === null || selectedNft === void 0 ? void 0 : selectedNft.image,\n            alt: selectedNft === null || selectedNft === void 0 ? void 0 : selectedNft.NFTName,\n            style: {\n              width: \"200px\",\n              height: \"200px\",\n              objectFit: \"cover\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: selectedNft === null || selectedNft === void 0 ? void 0 : selectedNft.NFTName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: selectedNft === null || selectedNft === void 0 ? void 0 : selectedNft.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                my: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                display: \"flex\",\n                alignItems: \"center\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Price:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this), \" \", selectedNft === null || selectedNft === void 0 ? void 0 : selectedNft.price, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                src: NFToken,\n                alt: \"NFToken\",\n                style: {\n                  width: 30,\n                  height: 30\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleBuy,\n          color: \"primary\",\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(TrendingNFTs, \"AWTyc22M+fZRUEW7SoqvWRlTCcY=\");\n_c = TrendingNFTs;\nexport default TrendingNFTs;\nvar _c;\n$RefreshReg$(_c, \"TrendingNFTs\");","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","CircularProgress","Card","CardMedia","CardContent","Button","IconButton","Dialog","DialogActions","DialogContent","DialogTitle","Divider","FavoriteIcon","FavoriteBorderIcon","ShoppingCartIcon","NFToken","toast","jsxDEV","_jsxDEV","TrendingNFTs","_s","nfts","setNfts","loading","setLoading","error","likedNfts","setLikedNfts","openDialog","setOpenDialog","selectedNft","setSelectedNft","fetchTrendingNFTs","res","fetch","ok","Error","data","json","console","fetchFavorites","method","headers","credentials","success","favorites","map","fav","_id","sx","mt","fileName","_jsxFileName","lineNumber","columnNumber","color","children","handleLike","nftId","includes","prev","filter","id","message","handleBuyClick","nft","handleCancel","handleBuy","owner","fullname","p","variant","length","display","gridTemplateColumns","gap","index","_nft$owner","_nft$creator","position","borderRadius","transition","transform","boxShadow","background","padding","content","top","left","right","bottom","zIndex","component","height","image","alt","NFTName","fontWeight","description","alignItems","price","src","style","width","creator","royalty","justifyContent","onClick","startIcon","open","onClose","objectFit","my","_c","$RefreshReg$"],"sources":["C:/Users/pedro/Desktop/NFTradeMarketPlace/client/src/pages/NFTs/TrendingNFTs.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  CircularProgress,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Button,\r\n  IconButton,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\";\r\nimport NFToken from \"../../images/NFToken.png\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst TrendingNFTs = () => {\r\n  const [nfts, setNfts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error] = useState(null);\r\n  const [likedNfts, setLikedNfts] = useState([]);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [selectedNft, setSelectedNft] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchTrendingNFTs = async () => {\r\n      try {\r\n        const res = await fetch(\"process.env.REACT_APP_BACKEND_BASEURL/trending-nfts\");\r\n        if (!res.ok) {\r\n          throw new Error(\"Failed to fetch trending NFTs\");\r\n        }\r\n        const data = await res.json();\r\n        setNfts(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching the NFTs:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTrendingNFTs();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchFavorites = async () => {\r\n      try {\r\n        const res = await fetch(\"process.env.REACT_APP_BACKEND_BASEURL/user/favorites\", {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          credentials: \"include\",\r\n        });\r\n        const data = await res.json();\r\n        if (data.success) {\r\n          setLikedNfts(data.favorites.map((fav) => fav._id));\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching favorites:\", error);\r\n      }\r\n    };\r\n\r\n    fetchFavorites();\r\n  }, []);\r\n\r\n  if (loading) return <CircularProgress sx={{ mt: 3 }} />;\r\n  if (error) return <Typography color=\"error\">Error: {error}</Typography>;\r\n\r\n  const handleLike = async (nftId) => {\r\n    try {\r\n      let res;\r\n      if (likedNfts.includes(nftId)) {\r\n        res = await fetch(`process.env.REACT_APP_BACKEND_BASEURL/nft/favorite/${nftId}`, {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          credentials: \"include\",\r\n        });\r\n      } else {\r\n        res = await fetch(`process.env.REACT_APP_BACKEND_BASEURL/nft/favorite/${nftId}`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          credentials: \"include\",\r\n        });\r\n      }\r\n\r\n      const data = await res.json();\r\n\r\n      if (data.success) {\r\n        if (likedNfts.includes(nftId)) {\r\n          setLikedNfts((prev) => prev.filter((id) => id !== nftId));\r\n          toast.success(\"NFT removed from favorites!\");\r\n        } else {\r\n          setLikedNfts((prev) => [...prev, nftId]);\r\n          toast.success(\"NFT added to favorites!\");\r\n        }\r\n      } else {\r\n        toast.error(data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error toggling like on NFT:\", error);\r\n      toast.error(\"Error updating favorite status.\");\r\n    }\r\n  };\r\n\r\n  const handleBuyClick = (nft) => {\r\n    setSelectedNft(nft);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setOpenDialog(false);\r\n    setSelectedNft(null);\r\n  };\r\n\r\n  const handleBuy = async () => {\r\n    try {\r\n      const res = await fetch(\r\n        `process.env.REACT_APP_BACKEND_BASEURL/nft/buy/${selectedNft._id}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          credentials: \"include\",\r\n        }\r\n      );\r\n\r\n      const data = await res.json();\r\n\r\n      if (data.success) {\r\n        toast.success(\"NFT purchased successfully!\");\r\n        setNfts((prev) =>\r\n          prev.map((nft) =>\r\n            nft._id === selectedNft._id\r\n              ? { ...nft, owner: { fullname: \"You\" } }\r\n              : nft\r\n          )\r\n        );\r\n        setNfts((prev) => prev.filter((nft) => nft._id !== selectedNft._id));\r\n      } else {\r\n        toast.error(data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error buying NFT:\", error);\r\n      toast.error(\"Error purchasing NFT.\");\r\n    } finally {\r\n      setOpenDialog(false);\r\n      setSelectedNft(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h4\">Trending NFTs</Typography>\r\n\r\n      {nfts.length === 0 ? (\r\n        <Typography sx={{ mt: 3 }}>No NFTs found.</Typography>\r\n      ) : (\r\n        <Box\r\n          sx={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\r\n            gap: 3,\r\n            mt: 3,\r\n          }}\r\n        >\r\n          {nfts.map((nft, index) => (\r\n            <Card\r\n              key={nft._id}\r\n              sx={{\r\n                position: \"relative\",\r\n                borderRadius: \"12px\",\r\n                transition: \"transform 0.3s ease, box-shadow 0.3s ease\",\r\n                \"&:hover\": {\r\n                  transform: \"scale(1.05)\",\r\n                  boxShadow: \"0px 4px 20px rgba(0,0,0,0.2)\",\r\n                },\r\n                background:\r\n                  index === 0\r\n                    ? \"linear-gradient(135deg, #FFC107 30%,rgb(240, 209, 33) 60%, #FFF5CC 100%)\"\r\n                    : index === 1\r\n                    ? \"linear-gradient(135deg,rgb(95, 103, 112) 30%, #C0C0C0 60%, #E8E8E8 100%)\"\r\n                    : index === 2\r\n                    ? \"linear-gradient(135deg,rgb(179, 90, 2) 30%, #B87333 60%, #E3A869 100%)\"\r\n                    : \"none\",\r\n                padding: \"4px\",\r\n                \"&::before\":\r\n                  index < 3\r\n                    ? {\r\n                        content: '\"\"',\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        zIndex: -1,\r\n                        borderRadius: \"inherit\",\r\n                        background:\r\n                          index === 0\r\n                            ? \"linear-gradient(135deg, #FFC107 30%,rgb(233, 200, 13) 60%, #FFF5CC 100%)\"\r\n                            : index === 1\r\n                            ? \"linear-gradient(135deg,rgb(114, 124, 138) 30%, #C0C0C0 60%, #E8E8E8 100%)\"\r\n                            : index === 2\r\n                            ? \"linear-gradient(135deg, #CD7F32 30%, #B87333 60%, #E3A869 100%)\"\r\n                            : \"none\",\r\n                      }\r\n                    : {},\r\n              }}\r\n            >\r\n              <CardMedia\r\n                component=\"img\"\r\n                height=\"300\"\r\n                image={nft.image}\r\n                alt={nft.NFTName}\r\n                sx={{borderRadius: \"12px\"}}\r\n              />\r\n              <CardContent>\r\n                <Typography variant=\"h6\" sx={{ fontWeight: \"bold\" }}>\r\n                  {index + 1}º - {nft.NFTName}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {nft.description}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  fontWeight=\"bold\"\r\n                  sx={{ display: \"flex\", alignItems: \"center\" }}\r\n                >\r\n                  {nft.price}\r\n                  <img\r\n                    src={NFToken}\r\n                    alt=\"NFToken\"\r\n                    style={{ width: 35, height: 35 }}\r\n                  />\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  Owner: {nft.owner?.fullname}\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                  Creator: {nft.creator?.fullname}\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                  Royalty: {nft.royalty}%\r\n                </Typography>\r\n\r\n                <Box\r\n                  sx={{\r\n                    mt: 2,\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <IconButton\r\n                    onClick={() => handleLike(nft._id)}\r\n                    sx={{\r\n                      color: likedNfts.includes(nft._id) ? \"red\" : \"gray\",\r\n                    }}\r\n                  >\r\n                    {likedNfts.includes(nft._id) ? (\r\n                      <FavoriteIcon />\r\n                    ) : (\r\n                      <FavoriteBorderIcon />\r\n                    )}\r\n                  </IconButton>\r\n                  <Button\r\n                    onClick={() => handleBuyClick(nft)}\r\n                    variant=\"outlined\"\r\n                    color=\"\"\r\n                    startIcon={<ShoppingCartIcon />}\r\n                  >\r\n                    Buy\r\n                  </Button>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </Box>\r\n      )}\r\n\r\n      <Dialog open={openDialog} onClose={handleCancel}>\r\n        <DialogTitle>Buy NFT</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ display: \"flex\", gap: 2 }}>\r\n            <img\r\n              src={selectedNft?.image}\r\n              alt={selectedNft?.NFTName}\r\n              style={{ width: \"200px\", height: \"200px\", objectFit: \"cover\" }}\r\n            />\r\n            <Box>\r\n              <Typography variant=\"h6\">{selectedNft?.NFTName}</Typography>\r\n              <Typography variant=\"body2\">\r\n                {selectedNft?.description}\r\n              </Typography>\r\n              <Divider sx={{ my: 1 }} />\r\n              <Typography\r\n                variant=\"body1\"\r\n                sx={{ display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                <strong>Price:</strong> {selectedNft?.price}{\" \"}\r\n                <img\r\n                  src={NFToken}\r\n                  alt=\"NFToken\"\r\n                  style={{ width: 30, height: 30}}\r\n                />\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel}>Cancel</Button>\r\n          <Button onClick={handleBuy} color=\"primary\">\r\n            Buy\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TrendingNFTs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}