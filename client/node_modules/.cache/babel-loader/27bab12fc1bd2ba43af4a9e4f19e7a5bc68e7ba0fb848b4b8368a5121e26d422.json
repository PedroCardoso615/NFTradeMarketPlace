{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pedro\\\\Desktop\\\\NFTradeMarketPlace\\\\client\\\\src\\\\pages\\\\User\\\\DailyReward.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Card, CardContent, Typography, CircularProgress } from \"@mui/material\";\nimport { toast } from \"react-toastify\";\nimport NFToken from \"../../images/NFToken.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DailyReward = () => {\n  _s();\n  const [balance, setBalance] = useState(0);\n  const [remainingTime, setRemainingTime] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    fetchUserData();\n  }, []);\n  const fetchUserData = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/user/me\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n      });\n      const data = await res.json();\n      if (data.success && data.user) {\n        setBalance(data.user.balance || 0);\n        if (data.user.lastClaimedReward) {\n          const lastClaimed = new Date(data.user.lastClaimedReward).getTime();\n          const nextClaimTime = lastClaimed + 12 * 60 * 60 * 1000;\n          const now = new Date().getTime();\n          if (now < nextClaimTime) {\n            setRemainingTime(Math.ceil((nextClaimTime - now) / 1000));\n          } else {\n            setRemainingTime(null);\n          }\n        }\n      } else {\n        toast.error(\"Failed to fetch user data.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n      toast.error(\"Error fetching user data.\");\n    }\n  };\n  const claimReward = async () => {\n    setLoading(true);\n    try {\n      const res = await fetch(\"http://localhost:5000/user/daily-reward\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n      });\n      const data = await res.json();\n      if (data.success) {\n        toast.success(data.message || \"You claimed 0.25 NFTokens!\");\n        setBalance(data.balance || 0);\n        setRemainingTime(12 * 60 * 60);\n      } else {\n        toast.error(data.message || \"Failed to claim reward.\");\n      }\n    } catch (error) {\n      console.error(error);\n      toast.error(\"An error occurred while claiming reward.\");\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    if (remainingTime !== null) {\n      const interval = setInterval(() => {\n        setRemainingTime(prev => prev > 0 ? prev - 1 : null);\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [remainingTime]);\n  const formatTime = seconds => {\n    const h = Math.floor(seconds / 3600);\n    const m = Math.floor(seconds % 3600 / 60);\n    const s = seconds % 60;\n    return `${h.toString().padStart(2, \"0\")}:${m.toString().padStart(2, \"0\")}:${s.toString().padStart(2, \"0\")}`;\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 400,\n      mx: \"auto\",\n      mt: 5,\n      p: 3,\n      textAlign: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"\\uD83C\\uDF81 Daily Rewards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: [\"Current Balance: \", balance, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: NFToken,\n          alt: \"NFToken\",\n          style: {\n            width: 35,\n            height: 35\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: [\"You will receive: 0.25\", \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: NFToken,\n          alt: \"NFToken\",\n          style: {\n            width: 35,\n            height: 35\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: claimReward,\n        disabled: remainingTime !== null || loading,\n        sx: {\n          mt: 2,\n          width: \"100%\"\n        },\n        children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24,\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this) : \"Claim Reward\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), remainingTime !== null && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        fontWeight: \"bold\",\n        sx: {\n          mt: 2\n        },\n        children: [\"Next claim in: \", formatTime(remainingTime)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(DailyReward, \"l4ufFt2wwWoPLNl4jkM8d/MXzls=\");\n_c = DailyReward;\nexport default DailyReward;\nvar _c;\n$RefreshReg$(_c, \"DailyReward\");","map":{"version":3,"names":["React","useState","useEffect","Button","Card","CardContent","Typography","CircularProgress","toast","NFToken","jsxDEV","_jsxDEV","DailyReward","_s","balance","setBalance","remainingTime","setRemainingTime","loading","setLoading","fetchUserData","res","fetch","method","headers","credentials","data","json","success","user","lastClaimedReward","lastClaimed","Date","getTime","nextClaimTime","now","Math","ceil","error","console","claimReward","message","interval","setInterval","prev","clearInterval","formatTime","seconds","h","floor","m","s","toString","padStart","sx","maxWidth","mx","mt","p","textAlign","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","justifyContent","src","alt","style","width","height","color","onClick","disabled","size","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/pedro/Desktop/NFTradeMarketPlace/client/src/pages/User/DailyReward.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { toast } from \"react-toastify\";\r\nimport NFToken from \"../../images/NFToken.png\";\r\n\r\nconst DailyReward = () => {\r\n  const [balance, setBalance] = useState(0);\r\n  const [remainingTime, setRemainingTime] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/user/me\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (data.success && data.user) {\r\n        setBalance(data.user.balance || 0);\r\n\r\n        if (data.user.lastClaimedReward) {\r\n          const lastClaimed = new Date(data.user.lastClaimedReward).getTime();\r\n          const nextClaimTime = lastClaimed + 12 * 60 * 60 * 1000;\r\n          const now = new Date().getTime();\r\n\r\n          if (now < nextClaimTime) {\r\n            setRemainingTime(Math.ceil((nextClaimTime - now) / 1000));\r\n          } else {\r\n            setRemainingTime(null);\r\n          }\r\n        }\r\n      } else {\r\n        toast.error(\"Failed to fetch user data.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching user data:\", error);\r\n      toast.error(\"Error fetching user data.\");\r\n    }\r\n  };\r\n\r\n  const claimReward = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/user/daily-reward\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (data.success) {\r\n        toast.success(data.message || \"You claimed 0.25 NFTokens!\");\r\n        setBalance(data.balance || 0);\r\n        setRemainingTime(12 * 60 * 60);\r\n      } else {\r\n        toast.error(data.message || \"Failed to claim reward.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"An error occurred while claiming reward.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (remainingTime !== null) {\r\n      const interval = setInterval(() => {\r\n        setRemainingTime((prev) => (prev > 0 ? prev - 1 : null));\r\n      }, 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [remainingTime]);\r\n\r\n  const formatTime = (seconds) => {\r\n    const h = Math.floor(seconds / 3600);\r\n    const m = Math.floor((seconds % 3600) / 60);\r\n    const s = seconds % 60;\r\n    return `${h.toString().padStart(2, \"0\")}:${m\r\n      .toString()\r\n      .padStart(2, \"0\")}:${s.toString().padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ maxWidth: 400, mx: \"auto\", mt: 5, p: 3, textAlign: \"center\" }}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          🎁 Daily Rewards\r\n        </Typography>\r\n\r\n        <Typography variant=\"body1\" sx={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\r\n          Current Balance: {balance}{\" \"}\r\n          <img src={NFToken} alt=\"NFToken\" style={{ width: 35, height: 35 }} />\r\n        </Typography>\r\n        <Typography variant=\"body1\" sx={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\r\n          You will receive: 0.25{\" \"}\r\n          <img src={NFToken} alt=\"NFToken\" style={{ width: 35, height: 35 }} />\r\n        </Typography>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={claimReward}\r\n          disabled={remainingTime !== null || loading}\r\n          sx={{ mt: 2, width: \"100%\" }}\r\n        >\r\n          {loading ? (\r\n            <CircularProgress size={24} color=\"inherit\" />\r\n          ) : (\r\n            \"Claim Reward\"\r\n          )}\r\n        </Button>\r\n\r\n        {remainingTime !== null && (\r\n          <Typography variant=\"body2\" fontWeight=\"bold\" sx={{ mt: 2 }}>\r\n            Next claim in: {formatTime(remainingTime)}\r\n          </Typography>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DailyReward;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}