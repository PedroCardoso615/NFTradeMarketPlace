{"ast":null,"code":"import{useState,useRef}from\"react\";import{storage}from\"../../config/firebaseConfig\";import{ref,uploadBytes,getDownloadURL}from\"firebase/storage\";import{toast}from\"react-toastify\";import{Box,TextField,Button,Typography,Input,IconButton}from\"@mui/material\";import{CloudUpload}from\"@mui/icons-material\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CreateNFT=()=>{const[NFTName,setNFTName]=useState(\"\");const[description,setDescription]=useState(\"\");const[price,setPrice]=useState(\"\");const[royalty,setRoyalty]=useState(\"\");const[image,setImage]=useState(null);const fileInputRef=useRef();const handleNFTCreation=async()=>{if(!NFTName||!description||!price||!royalty||!image){toast.error(\"All fields are required!\",{position:\"top-right\"});return;}const parsedPrice=Number(price);const parsedRoyalty=Number(royalty);if(isNaN(parsedPrice)||parsedPrice<=0){toast.error(\"Price must be a positive number.\",{position:\"top-right\"});return;}if(isNaN(parsedRoyalty)||parsedRoyalty<0||parsedRoyalty>20){toast.error(\"Royalty must be between 0% and 20%.\",{position:\"top-right\"});return;}try{const imageRef=ref(storage,`nftImages/${image.name}`);await uploadBytes(imageRef,image);const imgUrl=await getDownloadURL(imageRef);const res=await fetch(\"https://nftrade-marketplace.vercel.app/nft/create\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},credentials:\"include\",body:JSON.stringify({NFTName,description,price:parsedPrice,image:imgUrl,royalty:parsedRoyalty})});const data=await res.json();if(!res.ok)throw new Error(data.message||\"Failed to create NFT.\");toast.success(\"NFT Created Successfully!\",{position:\"top-right\"});setNFTName(\"\");setDescription(\"\");setPrice(\"\");setRoyalty(\"\");setImage(null);fileInputRef.current.value=\"\";}catch(err){toast.error(err.message||\"NFT creation failed.\",{position:\"top-right\"});console.error(err);}};return/*#__PURE__*/_jsxs(Box,{sx:{maxWidth:400,mx:\"auto\",p:4,mt:3,boxShadow:3,borderRadius:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",sx:{textAlign:\"center\",mb:2},children:\"Create NFT\"}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"NFT Name\",variant:\"outlined\",value:NFTName,onChange:e=>setNFTName(e.target.value),sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,multiline:true,rows:3,label:\"Description\",variant:\"outlined\",value:description,onChange:e=>setDescription(e.target.value),sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,type:\"number\",label:\"Price\",variant:\"outlined\",value:price,onChange:e=>setPrice(e.target.value),sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,type:\"number\",label:\"Royalty (0-20%)\",variant:\"outlined\",value:royalty,onChange:e=>setRoyalty(e.target.value),sx:{mb:2}}),/*#__PURE__*/_jsxs(Box,{sx:{display:\"flex\",alignItems:\"center\",gap:1,mb:2},children:[/*#__PURE__*/_jsx(Input,{type:\"file\",accept:\"image/*\",inputRef:fileInputRef,onChange:e=>setImage(e.target.files[0]),sx:{display:\"none\"}}),/*#__PURE__*/_jsxs(IconButton,{color:\"primary\",component:\"label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",hidden:true,ref:fileInputRef,onChange:e=>setImage(e.target.files[0])}),/*#__PURE__*/_jsx(CloudUpload,{})]}),/*#__PURE__*/_jsx(Typography,{children:image?image.name:\"Upload NFT Image\"})]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",fullWidth:true,onClick:handleNFTCreation,children:\"Create NFT\"})]});};export default CreateNFT;","map":{"version":3,"names":["useState","useRef","storage","ref","uploadBytes","getDownloadURL","toast","Box","TextField","Button","Typography","Input","IconButton","CloudUpload","jsx","_jsx","jsxs","_jsxs","CreateNFT","NFTName","setNFTName","description","setDescription","price","setPrice","royalty","setRoyalty","image","setImage","fileInputRef","handleNFTCreation","error","position","parsedPrice","Number","parsedRoyalty","isNaN","imageRef","name","imgUrl","res","fetch","method","headers","credentials","body","JSON","stringify","data","json","ok","Error","message","success","current","value","err","console","sx","maxWidth","mx","p","mt","boxShadow","borderRadius","children","variant","textAlign","mb","fullWidth","label","onChange","e","target","multiline","rows","type","display","alignItems","gap","accept","inputRef","files","color","component","hidden","onClick"],"sources":["C:/Users/pedro/Desktop/NFTradeMarketPlace/client/src/pages/NFTs/NFTCreation.jsx"],"sourcesContent":["import { useState, useRef } from \"react\";\r\nimport { storage } from \"../../config/firebaseConfig\";\r\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Box, TextField, Button, Typography, Input, IconButton } from \"@mui/material\";\r\nimport { CloudUpload } from \"@mui/icons-material\";\r\n\r\nconst CreateNFT = () => {\r\n  const [NFTName, setNFTName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [royalty, setRoyalty] = useState(\"\");\r\n  const [image, setImage] = useState(null);\r\n  const fileInputRef = useRef();\r\n\r\n  const handleNFTCreation = async () => {\r\n    if (!NFTName || !description || !price || !royalty || !image) {\r\n      toast.error(\"All fields are required!\", { position: \"top-right\" });\r\n      return;\r\n    }\r\n\r\n    const parsedPrice = Number(price);\r\n    const parsedRoyalty = Number(royalty);\r\n\r\n    if (isNaN(parsedPrice) || parsedPrice <= 0) {\r\n      toast.error(\"Price must be a positive number.\", { position: \"top-right\" });\r\n      return;\r\n    }\r\n\r\n    if (isNaN(parsedRoyalty) || parsedRoyalty < 0 || parsedRoyalty > 20) {\r\n      toast.error(\"Royalty must be between 0% and 20%.\", { position: \"top-right\" });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const imageRef = ref(storage, `nftImages/${image.name}`);\r\n      await uploadBytes(imageRef, image);\r\n      const imgUrl = await getDownloadURL(imageRef);\r\n\r\n      const res = await fetch(\"https://nftrade-marketplace.vercel.app/nft/create\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({\r\n          NFTName,\r\n          description,\r\n          price: parsedPrice,\r\n          image: imgUrl,\r\n          royalty: parsedRoyalty,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data.message || \"Failed to create NFT.\");\r\n\r\n      toast.success(\"NFT Created Successfully!\", { position: \"top-right\" });\r\n\r\n      setNFTName(\"\");\r\n      setDescription(\"\");\r\n      setPrice(\"\");\r\n      setRoyalty(\"\");\r\n      setImage(null);\r\n      fileInputRef.current.value = \"\";\r\n    } catch (err) {\r\n      toast.error(err.message || \"NFT creation failed.\", { position: \"top-right\" });\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 400, mx: \"auto\", p: 4, mt: 3, boxShadow: 3, borderRadius: 2 }}>\r\n      <Typography variant=\"h5\" sx={{ textAlign: \"center\", mb: 2 }}>Create NFT</Typography>\r\n\r\n      <TextField\r\n        fullWidth\r\n        label=\"NFT Name\"\r\n        variant=\"outlined\"\r\n        value={NFTName}\r\n        onChange={(e) => setNFTName(e.target.value)}\r\n        sx={{ mb: 2 }}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        multiline\r\n        rows={3}\r\n        label=\"Description\"\r\n        variant=\"outlined\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n        sx={{ mb: 2 }}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        type=\"number\"\r\n        label=\"Price\"\r\n        variant=\"outlined\"\r\n        value={price}\r\n        onChange={(e) => setPrice(e.target.value)}\r\n        sx={{ mb: 2 }}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        type=\"number\"\r\n        label=\"Royalty (0-20%)\"\r\n        variant=\"outlined\"\r\n        value={royalty}\r\n        onChange={(e) => setRoyalty(e.target.value)}\r\n        sx={{ mb: 2 }}\r\n      />\r\n\r\n      <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mb: 2 }}>\r\n        <Input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          inputRef={fileInputRef}\r\n          onChange={(e) => setImage(e.target.files[0])}\r\n          sx={{ display: \"none\" }}\r\n        />\r\n        <IconButton color=\"primary\" component=\"label\">\r\n          <input type=\"file\" hidden ref={fileInputRef} onChange={(e) => setImage(e.target.files[0])} />\r\n          <CloudUpload />\r\n        </IconButton>\r\n        <Typography>{image ? image.name : \"Upload NFT Image\"}</Typography>\r\n      </Box>\r\n\r\n      <Button variant=\"contained\" fullWidth onClick={handleNFTCreation}>\r\n        Create NFT\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CreateNFT;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}